<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Version>1.14.0</Version>
    <BuildInfoVSSBE></BuildInfoVSSBE>
    <!-- <AssemblyVersion>0.0.1.0</AssemblyVersion> -->
    <!-- <FileVersion>0.0.1.0</FileVersion> -->
  </PropertyGroup>

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net40</TargetFrameworks>
    <RootNamespace>net.r_eg.SobaScript.Z.Ext</RootNamespace>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>key.snk</AssemblyOriginatorKeyFile>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Copyright>Copyright (c) 2014-2019  Denis Kuzmin &lt; x-3F@outlook.com &gt; GitHub/3F</Copyright>
    <Title>Core components for SobaScript</Title>
    <Description>Extended Core components for SobaScript -- Extensible Modular Scripting Programming Language
    
    https://github.com/3F/SobaScript

    Provides at least the following:
    
    * SevenZipComponent

    ```
    #[7z pack.files({"IntelOCL.log", "IntelChipset.log"}, "ilog.7z")]
    #[7z pack.files({"IntelAMT.log"}, "P:\s01\log.xml"}, "D:\output.zip", Zip, Deflate, 2)]
    #[7z pack.files(
        {
            "bin\gpp.exe", 
            "bin\lib\*.dll"
        },
        "gpp.7z", 
        {"bin\lib\stub.dll"}, 
        SevenZip, Lzma2, 4
    )]
    ```

    ```
    #[7z pack.directory("bin", "release.zip")]
    #[7z pack.directory("D:\log", "log.7z", SevenZip, Lzma2, 4)]
    ```

    ```
    #[( !#[7z check("arch.tar.xz")] ){
        #[Build cancel = true]
    }]

    #[var arch = #[7z check("arch.tar.xz", "pass-123")]]
    ```

    ```
    #[7z unpack("release.7z", true)]
    #[7z unpack("xscale.zip", "D:\app\xscale", false, "pass-123")]
    ```

    * NuGetComponent

    Through [GetNuTool](https://github.com/3F/GetNuTool).

    ```
    #[NuGet gnt.raw("/p:ngpackages=\"7z.Libs/19.0.1;vsSBE.CI.MSBuild/1.6.12011:../packages/CI.MSBuild\"")]
    #[NuGet gnt.raw("/t:pack /p:ngin=\"D:\tmp\7z.Libs\" /p:ngout=\"newdir/\"")]
    ```

    * FileComponent

    I/O local and remote operations.

    ```
    #[File replace.Regex("file.log", "(\d+)", "~@1~")]
    #[( #[IO exists.directory("D:\tmp\log")] ){
      ...
    }]
    ```

    ```
    #[IO copy.file("bin\release.7z", "@(out)dep\release.7z", true)]
    #[IO copy.file("D:\inc\*.h", "@(SolutionDir)inc/", false, {"ui.core.h", "http.h"})]
    #[File appendLine("in.log"): mixed data]
    ```

    ```
    #[IO copy.file({
                        "bin\client.zip", 
                        "bin\server\*.*"
                  }, 
                  "@(plugin)\beta", 
                  true, 
                  { 
                        "*debug*",
                        "*.pdb"
                  })]
    ```

    ```
    #[IO copy.directory("bin", "@(out)dep/mixed", true)]

    #[IO remote.download("ftp://192.168.17.04:2021/dir1/non-api.png", "non-api.png", "usr", "pwd")]
    #[IO remote.download("http://example.com", "example.com.html")]
    ```

    ...

    https://github.com/3F/SobaScript.Z.Ext

    =======================================
    gnt /p:ngpackages="SobaScript.Z.Ext/$(Version)"
    ================== https://github.com/3F/GetNuTool

    Build info:

    $(BuildInfoVSSBE)
    </Description>
    <PackageOwners>reg</PackageOwners>
    <PackageProjectUrl>https://github.com/3F/SobaScript.Z.Ext</PackageProjectUrl>
    <RepositoryUrl>https://github.com/3F/SobaScript.Z.Ext</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>ProgrammingLanguage SobaScript ScriptLanguage Components Modules scripts scripting evaluator parser Varhead vsSBE SBE-Scripts E-MSBuild EvMSBuild vsSolutionBuildEvent vsCommandEvent</PackageTags>
    <PackageReleaseNotes>https://github.com/3F/SobaScript.Z.Ext/blob/master/changelog.txt</PackageReleaseNotes>
    <Authors>github.com/3F/SobaScript.Z.Ext</Authors>
    <DocumentationFile>$(OutputPath)\$(AssemblyName).xml</DocumentationFile>
    <PackageLicenseFile>License.txt</PackageLicenseFile>
    <Configurations>DBG_SDK10;DBG_SDK15;REL_SDK10;REL_SDK15;DCI_SDK10;DCI_SDK15;RCI_SDK10;RCI_SDK15</Configurations>
    <NoWarn>1701;1702;CS1591</NoWarn>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' Or $(Configuration.Contains('DBG_')) Or $(Configuration.Contains('DCI_')) ">
    <DefineConstants>DEBUG;TRACE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' Or $(Configuration.Contains('REL_')) Or $(Configuration.Contains('RCI_')) ">
    <DefineConstants />
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\License.txt">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="..\Readme.md">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="..\changelog.txt">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="..\.version">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <!-- <Content Include="NuGet\gnt.bat">
      <Pack>True</Pack>
      <PackagePath>lib\net40\</PackagePath>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="NuGet\gnt.bat">
      <Pack>True</Pack>
      <PackagePath>lib\netstandard2.0\</PackagePath>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content> -->
    <EmbeddedResource Include="NuGet\gnt.bat" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\tools\hMSBuild.bat">
      <Visible>false</Visible>
      <Pack>True</Pack>
      <PackagePath>tools\</PackagePath>
    </None>
    <None Include="..\tools\gnt.bat">
      <Visible>false</Visible>
      <Pack>True</Pack>
      <PackagePath>tools\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\SobaScript.Mapper\SobaScript.Mapper\SobaScript.Mapper.csproj" />
    <ProjectReference Include="..\SobaScript\SobaScript\SobaScript.csproj" />
  </ItemGroup>

</Project>
